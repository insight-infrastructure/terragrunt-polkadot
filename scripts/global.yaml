---

# Create secrets if doesn't exist
secrets_create_:
  type: yaml
  path: secrets.yaml
  when: "{{ 'NotExist' in global.secrets_file_ }}"
  contents:
    dev:
    test:
    stage:
    prod:

secrets_file_:
  type: find_in_parent
  when: "{{ 'NotExist' not in global.secrets_file_ }}"
  target: secrets.yaml

# Which environments
envs_global_:
  type: checkbox
  message: Which environment's global variables are you trying to create?
  choices: "{{ global._environments }}"

# SSH
ssh_options_:
  type: list
  message: What SSH items would you like to configure?
  when: "{{ 'ssh' in global.global_settings_ }}"
  choices:
    - ssh-keygen: Generate new SSH Keys
    - ssh-path: Set path to SSH keys
    - ssh-paste: Paste

## SSH Generate
ssh_keygen_paths_:
  type: input
  message: "What path to put the {{ global.item }} environment ssh key?"
  when: "{{ 'ssh-keygen' in global.ssh_options_ }}"
  loop: "{{ global.envs_global_ }}"
  default: "$HOME/.ssh/polkadot-{{ global.item }}"

ssh_keygen_:
  type: command
  loop: "{{ global.ssh_keygen_paths_ }}"
  when: "{{ 'ssh-keygen' in global.ssh_options_ }}"
  command: |
    ssh-keygen -t rsa -b 4096 -f {{ global.item }}

ssh_keygen_read_:
  type: yaml
  path: "{{ global.secrets_file_ }}"
  loop: "{{ global.envs_global_ }}"
  merge_in_place: "{{ global.ssh_keygen_update_ }}"


debug1:
  type: yaml
  path: debug-secrets.yaml
  contents: "{{ global }}"
hold1:
  type: confirm
  message: This

debuggger:
  type: print
  statement: |
    {% for i in global.envs_global_ %}{{i}}:
      public_key_path: "{{ global.ssh_keygen_paths_[loop.index - 1] }}.pub"
      private_key_path: "{{ global.ssh_keygen_paths_[loop.index -1] }}"
    {% endfor %}


ssh_keygen_update_:
  type: stat
  input: "{{ global.ssh_keygen_read_ }}"
  merge_dict: |
    {% for i in global.envs_global_ %}{{i}}:
      public_key_path: "{{ global.ssh_keygen_paths_[loop.index - 1] }}.pub"
      private_key_path: "{{ global.ssh_keygen_paths_[loop.index - 1] }}"
    {% endfor %}

debug:
  type: yaml
  path: debug-secrets.yaml
  contents: "{{ global }}"
hold:
  type: confirm
  message: This

ssh_keygen_write_:
  type: yaml
  path: "{{ global.secrets_file_ }}"
  contents: "{{ global.ssh_keygen_read_ }}"
  loop: "{{ global.envs_global_ }}"
  merge_dict: "{{ global.ssh_keygen_update_ }}"
#    "{{ global.item }}":
#      public_key_path: "{{ global.ssh_keygen_paths_[global.index] }}.pub"
#      private_key_path: "{{ global.ssh_keygen_paths_[global.index] }}"

## SSH Path



# DNS


# Cloud Credentials


#