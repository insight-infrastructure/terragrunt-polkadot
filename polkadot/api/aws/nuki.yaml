---

version_:
  type: yaml
  path: versions.yaml

provider:
  type: stat
  input: aws

region:
  type: stat
  input: "{{ nuki.item }}"

# Configs
#global_:
#  type: nukikata
#  merge: true
#  template: https://github.com/insight-w3f/terraform-polkadot-aws-network
#  checkout: "{{ nuki.version_[nuki.environment]['network'] }}"
#  existing_context: "{{ nuki }}"
#  when: "{{ nuki.index == 0 }}"

network_:
  type: nukikata
  merge: true
  template: https://github.com/insight-w3f/terraform-polkadot-aws-network
  checkout: "{{ nuki.version_[nuki.environment]['network'] }}"
  existing_context: "{{ nuki }}"

k8s-cluster:
  type: nukikata
  merge: true
  chdir: k8s-cluster
  existing_context: "{{ nuki }}"

asg:
  type: nukikata
  merge: true
  template: https://github.com/insight-w3f/terraform-polkadot-aws-asg
  checkout: "{{ nuki.version_[nuki.environment]['asg'] }}"
  existing_context: "{{ nuki }}"

k8s-config:
  type: nukikata
  merge: true
  template: https://github.com/insight-w3f/terraform-polkadot-k8s-config
  checkout: "{{ nuki.version_[nuki.environment]['k8s-config'] }}"
  existing_context: "{{ nuki }}"

# Write the deployment file
deployment_exists_:
  type: path_exists
  path: deployments/polkadot.api.{{configure.network_name}}.{{configure.environment}}.{{configure.provider}}.{{configure.region}}.yaml

deployment_overwrite_:
  type: confirm
  message: |
    Do you want to overwrite the existing polkadot.api.{{configure.network_name}}.{{configure.environment}}.{{configure.region}}
    deployment? - will exit program ->
  when: "{{ configure.deployment_exists_ }}"

deployment_write_:
  type: yaml
  loop: "{{ nuki.aws_regions_ }}"
  path: "{{nuki.deployments_dir_}}/polkadot.api.{{nuki.network_name}}.{{nuki.environment}}.{{nuki.item}}.yaml"
  contents: "{{ nuki }}"
  remove:
    - ^_
    - _$

# Apply
apply_confirm_:
  type: confirm
  message: Do you want deploy now?

apply_:
  type: nukikata
  context_file: "{{ nuki.scripts_dir_ }}/apply.yaml"
  loop: "{{ nuki.aws_regions_ }}"
  when: "{{ nuki.apply_confirm_ }}"
  existing_context:
    template_path: "{{ nuki.provider }}.variables.hcl.j2"
    file_system_loader: "{{ nuki.file_system_loader_ }}"
    namespace: "{{ nuki.namespace }}"
    stack: "{{ nuki.stack }}"
    network_name: "{{ nuki.network_name }}"
    environment: "{{ nuki.environment }}"
    provider: "{{ nuki.provider }}"
    region: "{{ nuki.region }}"

